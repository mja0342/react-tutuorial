{"version":3,"sources":["Components/AddTodo.js","Components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["AddTodo","props","handleIdChange","event","setState","Id","target","value","handleTitleChange","Title","handleStatusChange","Status","handleToDoSubmit","preventDefault","onAddTodo","state","onSubmit","this","className","placeholder","onChange","type","Component","TodoList","addToDo","todo","todos","deleteToDo","filteredItems","filter","x","editToDo","map","style","color","onClick","icon","library","add","faTrash","faEdit","faPlus","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4ae33d7.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass AddTodo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            Id: \"\",\n            Title: \"\",\n            Status: \"Pending\"\n        };\n    }\n\n    handleIdChange = (event) => {\n        this.setState({\n            Id: event.target.value\n        })\n    }\n\n    handleTitleChange = (event) => {\n        this.setState({\n            Title: event.target.value\n        })\n    }\n\n    handleStatusChange = (event) => {\n        this.setState({\n            Status: event.target.value\n        })\n    }\n\n    handleToDoSubmit = (event) => {\n        event.preventDefault();\n        this.props.onAddTodo({\n            Id: this.state.Id,\n            Title: this.state.Title,\n            Status: this.state.Status\n        });\n        this.setState({\n            Id: \"\",\n            Title: \"\",\n            Status: \"Pending\"\n        })\n    }\n\n    render() {\n        return(\n            <div>\n                <h3>Add ToDo</h3>\n\n                <form onSubmit={this.handleToDoSubmit}>\n                    <div className='form-group'>\n                        <input\n                            value={this.state.Id}\n                            className=\"form-control\"\n                            placeholder=\"Enter Id\"\n                            onChange={this.handleIdChange}\n                        />\n                    </div>\n                    <div className='form-group'>\n                        <input\n                            value={this.state.Title}\n                            className=\"form-control\"\n                            placeholder=\"Enter Title\"\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='form-group'>\n                        <select\n                            value={this.state.Status}\n                            className=\"form-control\"\n                            onChange={this.handleStatusChange}>\n                            <option value=\"Done\">Done</option>\n                            <option value=\"Pending\">Pending</option>\n                        </select>\n                    </div>\n                    <button type=\"submit\" className=\"form-control btn btn-primary\">Add Todo</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default AddTodo;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport AddTodo from \"./AddTodo\";\n\nclass TodoList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            todos: [\n                { Id: '1', Title: 'Push your code to github', Status: 'Done' },\n                { Id: '2', Title: 'Email to your manager', Status: 'Pending' }\n            ]\n        }\n    }\n\n    addToDo = (todo) => {\n        this.setState({\n            todos: [...this.state.todos, todo]\n        });\n    };\n\n    deleteToDo = (todo) => {\n        const filteredItems = this.state.todos.filter(x => x.Id !== todo.Id);\n        this.setState({\n            todos: filteredItems\n        });\n    };\n\n    editToDo = (x) => {\n        this.setState(state => ({\n            todos: state.todos.map(todo => {\n                if (todo.Id === x.Id) {\n                    return {\n                        ...todo,\n                        Status: todo.Status === \"Done\" ? \"Pending\" : \"Done\"\n                    };\n                } else {\n                    return todo;\n                }\n            })\n        }));\n    };\n\n    render() {\n        return (\n            <div>\n                <AddTodo onAddTodo={this.addToDo}/>\n                <h1>TodoList </h1>\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Title</th>\n                            <th>Status</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.todos.map(x => {\n                                return(\n                                    <tr key={x.Id}>\n                                        <td> {x.Id} </td>\n                                        <td> {x.Title} </td>\n                                        <td style={{ color: x.Status === \"Done\"? \"green\" : \"red\" }}> {x.Status} </td>\n                                        <td>\n                                            <button className=\"btn btn-primary m-1\" onClick={() => this.deleteToDo(x)}>\n                                                <span>\n                                                    <FontAwesomeIcon icon={\"trash\"}/>\n                                                </span>\n                                            </button>\n                                            <button className=\"btn btn-primary m-1\" onClick={() => this.editToDo(x)}>\n                                                <span>\n                                                    <FontAwesomeIcon icon={\"edit\"}/>\n                                                </span>\n                                            </button>\n                                        </td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default TodoList;\n","// import Demo from \"./Components/Demo\";\n// import FunctionalDemo1 from \"./Components/FunctionalDemo1\";\n// import FunctionalDemo2 from \"./Components/FunctionalDemo2\";\n// import FunctionalDemo3 from \"./Components/FunctionalDemo3\";\nimport './App.css';\nimport TodoList from \"./Components/TodoList\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faTrash, faPlus, faEdit } from \"@fortawesome/free-solid-svg-icons\";\n// import Sample from \"./Components/Sample\";\n// import Parent from \"./Components/Parent\";\nlibrary.add(faTrash, faEdit, faPlus);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}